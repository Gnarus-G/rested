---
source: parser/tests/parser.rs
description: "\nset BASE_URL \"httas...\"\npost http://lasdf.. {}\n// asdfasdf\n\nlet output_file = \"output/file.json\"\nlet token = env(\"auth-token\")\n\n@log(output_file)\npost /asd {\n  // asdfasd\n  header \"Authorization\" token\n  body `{\n      \"neet\": \"${env(\"var\")}\",\n      \"nerd\": \"${output_file}\",\n  }`\n}\n\n@skip\nget /api {}\n\nput /api {}\npatch /api {}\ndelete /api {}\n"
expression: p
---
Program(
  items: [
    Set(
      identifier: Identifier(
        name: "BASE_URL",
        span: Span(
          start: Location(
            line: 1,
            col: 4,
          ),
          end: Location(
            line: 1,
            col: 12,
          ),
        ),
      ),
      value: String(StringLiteral(
        raw: "\"httas...\"",
        value: "httas...",
        span: Span(
          start: Location(
            line: 1,
            col: 13,
          ),
          end: Location(
            line: 1,
            col: 23,
          ),
        ),
      )),
    ),
    Request(
      method: POST,
      endpoint: Url(Literal(
        value: "http://lasdf..",
        span: Span(
          start: Location(
            line: 2,
            col: 5,
          ),
          end: Location(
            line: 2,
            col: 19,
          ),
        ),
      )),
      params: [],
      span: Span(
        start: Location(
          line: 2,
          col: 0,
        ),
        end: Location(
          line: 2,
          col: 19,
        ),
      ),
    ),
    LineComment(Literal(
      value: "// asdfasdf",
      span: Span(
        start: Location(
          line: 3,
          col: 0,
        ),
        end: Location(
          line: 3,
          col: 11,
        ),
      ),
    )),
    Let(
      identifier: Identifier(
        name: "output_file",
        span: Span(
          start: Location(
            line: 5,
            col: 4,
          ),
          end: Location(
            line: 5,
            col: 15,
          ),
        ),
      ),
      value: String(StringLiteral(
        raw: "\"output/file.json\"",
        value: "output/file.json",
        span: Span(
          start: Location(
            line: 5,
            col: 18,
          ),
          end: Location(
            line: 5,
            col: 36,
          ),
        ),
      )),
    ),
    Let(
      identifier: Identifier(
        name: "token",
        span: Span(
          start: Location(
            line: 6,
            col: 4,
          ),
          end: Location(
            line: 6,
            col: 9,
          ),
        ),
      ),
      value: Call(
        identifier: Identifier(
          name: "env",
          span: Span(
            start: Location(
              line: 6,
              col: 12,
            ),
            end: Location(
              line: 6,
              col: 15,
            ),
          ),
        ),
        arguments: [
          String(StringLiteral(
            raw: "\"auth-token\"",
            value: "auth-token",
            span: Span(
              start: Location(
                line: 6,
                col: 16,
              ),
              end: Location(
                line: 6,
                col: 28,
              ),
            ),
          )),
        ],
      ),
    ),
    Attribute(
      location: Location(
        line: 8,
        col: 0,
      ),
      identifier: Identifier(
        name: "log",
        span: Span(
          start: Location(
            line: 8,
            col: 1,
          ),
          end: Location(
            line: 8,
            col: 4,
          ),
        ),
      ),
      parameters: [
        Identifier(Identifier(
          name: "output_file",
          span: Span(
            start: Location(
              line: 8,
              col: 5,
            ),
            end: Location(
              line: 8,
              col: 16,
            ),
          ),
        )),
      ],
    ),
    Request(
      method: POST,
      endpoint: Pathname(Literal(
        value: "/asd",
        span: Span(
          start: Location(
            line: 9,
            col: 5,
          ),
          end: Location(
            line: 9,
            col: 9,
          ),
        ),
      )),
      params: [
        LineComment(Literal(
          value: "// asdfasd",
          span: Span(
            start: Location(
              line: 10,
              col: 2,
            ),
            end: Location(
              line: 10,
              col: 12,
            ),
          ),
        )),
        Header(
          name: StringLiteral(
            raw: "\"Authorization\"",
            value: "Authorization",
            span: Span(
              start: Location(
                line: 11,
                col: 9,
              ),
              end: Location(
                line: 11,
                col: 24,
              ),
            ),
          ),
          value: Identifier(Identifier(
            name: "token",
            span: Span(
              start: Location(
                line: 11,
                col: 25,
              ),
              end: Location(
                line: 11,
                col: 30,
              ),
            ),
          )),
        ),
        Body(
          value: TemplateSringLiteral(
            span: Span(
              start: Location(
                line: 12,
                col: 7,
              ),
              end: Location(
                line: 14,
                col: 36,
              ),
            ),
            parts: [
              String(StringLiteral(
                raw: "`{\n      \"neet\": \"",
                value: "{\n      \"neet\": \"",
                span: Span(
                  start: Location(
                    line: 12,
                    col: 7,
                  ),
                  end: Location(
                    line: 12,
                    col: 25,
                  ),
                ),
              )),
              Call(
                identifier: Identifier(
                  name: "env",
                  span: Span(
                    start: Location(
                      line: 13,
                      col: 17,
                    ),
                    end: Location(
                      line: 13,
                      col: 20,
                    ),
                  ),
                ),
                arguments: [
                  String(StringLiteral(
                    raw: "\"var\"",
                    value: "var",
                    span: Span(
                      start: Location(
                        line: 13,
                        col: 21,
                      ),
                      end: Location(
                        line: 13,
                        col: 26,
                      ),
                    ),
                  )),
                ],
              ),
              String(StringLiteral(
                raw: "\",\n      \"nerd\": \"",
                value: ",\n      \"nerd\": ",
                span: Span(
                  start: Location(
                    line: 13,
                    col: 28,
                  ),
                  end: Location(
                    line: 13,
                    col: 46,
                  ),
                ),
              )),
              Identifier(Identifier(
                name: "output_file",
                span: Span(
                  start: Location(
                    line: 14,
                    col: 17,
                  ),
                  end: Location(
                    line: 14,
                    col: 28,
                  ),
                ),
              )),
              String(StringLiteral(
                raw: "\",\n  }`",
                value: "\",\n  }",
                span: Span(
                  start: Location(
                    line: 14,
                    col: 29,
                  ),
                  end: Location(
                    line: 14,
                    col: 36,
                  ),
                ),
              )),
            ],
          ),
          start: Location(
            line: 12,
            col: 2,
          ),
        ),
      ],
      span: Span(
        start: Location(
          line: 9,
          col: 0,
        ),
        end: Location(
          line: 14,
          col: 36,
        ),
      ),
    ),
    Attribute(
      location: Location(
        line: 18,
        col: 0,
      ),
      identifier: Identifier(
        name: "skip",
        span: Span(
          start: Location(
            line: 18,
            col: 1,
          ),
          end: Location(
            line: 18,
            col: 5,
          ),
        ),
      ),
      parameters: [],
    ),
    Request(
      method: GET,
      endpoint: Pathname(Literal(
        value: "/api",
        span: Span(
          start: Location(
            line: 19,
            col: 4,
          ),
          end: Location(
            line: 19,
            col: 8,
          ),
        ),
      )),
      params: [],
      span: Span(
        start: Location(
          line: 19,
          col: 0,
        ),
        end: Location(
          line: 19,
          col: 8,
        ),
      ),
    ),
    Request(
      method: PUT,
      endpoint: Pathname(Literal(
        value: "/api",
        span: Span(
          start: Location(
            line: 21,
            col: 4,
          ),
          end: Location(
            line: 21,
            col: 8,
          ),
        ),
      )),
      params: [],
      span: Span(
        start: Location(
          line: 21,
          col: 0,
        ),
        end: Location(
          line: 21,
          col: 8,
        ),
      ),
    ),
    Request(
      method: PATCH,
      endpoint: Pathname(Literal(
        value: "/api",
        span: Span(
          start: Location(
            line: 22,
            col: 6,
          ),
          end: Location(
            line: 22,
            col: 10,
          ),
        ),
      )),
      params: [],
      span: Span(
        start: Location(
          line: 22,
          col: 0,
        ),
        end: Location(
          line: 22,
          col: 10,
        ),
      ),
    ),
    Request(
      method: DELETE,
      endpoint: Pathname(Literal(
        value: "/api",
        span: Span(
          start: Location(
            line: 23,
            col: 7,
          ),
          end: Location(
            line: 23,
            col: 11,
          ),
        ),
      )),
      params: [],
      span: Span(
        start: Location(
          line: 23,
          col: 0,
        ),
        end: Location(
          line: 23,
          col: 11,
        ),
      ),
    ),
  ],
)
