---
source: tests/parser.rs
description: "\nlet o = {\n    key: \"value\",\n    // akey: 123,\n    love: [\n        \"asdf\",\n        // asdf,\n        12\n    ]\n}"
expression: ast
---
Program(
  source: "\nlet o = {\n    key: \"value\",\n    // akey: 123,\n    love: [\n        \"asdf\",\n        // asdf,\n        12\n    ]\n}",
  items: [
    Let(VariableDeclaration(
      identifier: Ok(Token(
        kind: Ident,
        text: "o",
        start: Position(
          value: 5,
          line: 1,
          col: 4,
        ),
      )),
      value: Object((Span(
        start: Position(
          value: 9,
          line: 1,
          col: 8,
        ),
        end: Position(
          value: 110,
          line: 9,
          col: 1,
        ),
      ), [
        Ok(ObjectEntry(
          key: Ok(StringLiteral(
            raw: "key",
            value: "key",
            span: Span(
              start: Position(
                value: 15,
                line: 2,
                col: 4,
              ),
              end: Position(
                value: 18,
                line: 2,
                col: 7,
              ),
            ),
          )),
          value: String(StringLiteral(
            raw: "\"value\"",
            value: "value",
            span: Span(
              start: Position(
                value: 20,
                line: 2,
                col: 9,
              ),
              end: Position(
                value: 27,
                line: 2,
                col: 16,
              ),
            ),
          )),
        )),
        Ok(ObjectEntry(
          key: Ok(StringLiteral(
            raw: "love",
            value: "love",
            span: Span(
              start: Position(
                value: 51,
                line: 4,
                col: 4,
              ),
              end: Position(
                value: 55,
                line: 4,
                col: 8,
              ),
            ),
          )),
          value: Array(ExpressionList(
            span: Span(
              start: Position(
                value: 57,
                line: 4,
                col: 10,
              ),
              end: Position(
                value: 108,
                line: 8,
                col: 5,
              ),
            ),
            exprs: [
              String(StringLiteral(
                raw: "\"asdf\"",
                value: "asdf",
                span: Span(
                  start: Position(
                    value: 67,
                    line: 5,
                    col: 8,
                  ),
                  end: Position(
                    value: 73,
                    line: 5,
                    col: 14,
                  ),
                ),
              )),
              Number((Span(
                start: Position(
                  value: 100,
                  line: 7,
                  col: 8,
                ),
                end: Position(
                  value: 102,
                  line: 7,
                  col: 10,
                ),
              ), 12.0)),
            ],
          )),
        )),
      ])),
    )),
  ],
)
