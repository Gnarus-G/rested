---
source: tests/parser.rs
description: "\nlet o = {\n    key: read(\"test\"),\n    akey: env(\"url\")\n}"
expression: ast
---
Program(
  source: "\nlet o = {\n    key: read(\"test\"),\n    akey: env(\"url\")\n}",
  items: [
    Let(VariableDeclaration(
      identifier: Ok(Token(
        kind: Ident,
        text: "o",
        start: Position(
          value: 5,
          line: 1,
          col: 4,
        ),
      )),
      value: Object(ObjectEntryList(
        span: Span(
          start: Position(
            value: 9,
            line: 1,
            col: 8,
          ),
          end: Position(
            value: 55,
            line: 4,
            col: 0,
          ),
        ),
        items: [
          This(Ok(ObjectEntry(
            key: Ok(StringLiteral(
              raw: "key",
              value: "key",
              span: Span(
                start: Position(
                  value: 15,
                  line: 2,
                  col: 4,
                ),
                end: Position(
                  value: 17,
                  line: 2,
                  col: 6,
                ),
              ),
            )),
            value: Call(CallExpr(
              identifier: Ok(Token(
                kind: Ident,
                text: "read",
                start: Position(
                  value: 20,
                  line: 2,
                  col: 9,
                ),
              )),
              arguments: ExpressionList(
                span: Span(
                  start: Position(
                    value: 24,
                    line: 2,
                    col: 13,
                  ),
                  end: Position(
                    value: 31,
                    line: 2,
                    col: 20,
                  ),
                ),
                items: [
                  This(String(StringLiteral(
                    raw: "\"test\"",
                    value: "test",
                    span: Span(
                      start: Position(
                        value: 25,
                        line: 2,
                        col: 14,
                      ),
                      end: Position(
                        value: 30,
                        line: 2,
                        col: 19,
                      ),
                    ),
                  ))),
                ],
              ),
            )),
          ))),
          This(Ok(ObjectEntry(
            key: Ok(StringLiteral(
              raw: "akey",
              value: "akey",
              span: Span(
                start: Position(
                  value: 38,
                  line: 3,
                  col: 4,
                ),
                end: Position(
                  value: 41,
                  line: 3,
                  col: 7,
                ),
              ),
            )),
            value: Call(CallExpr(
              identifier: Ok(Token(
                kind: Ident,
                text: "env",
                start: Position(
                  value: 44,
                  line: 3,
                  col: 10,
                ),
              )),
              arguments: ExpressionList(
                span: Span(
                  start: Position(
                    value: 47,
                    line: 3,
                    col: 13,
                  ),
                  end: Position(
                    value: 53,
                    line: 3,
                    col: 19,
                  ),
                ),
                items: [
                  This(String(StringLiteral(
                    raw: "\"url\"",
                    value: "url",
                    span: Span(
                      start: Position(
                        value: 48,
                        line: 3,
                        col: 14,
                      ),
                      end: Position(
                        value: 52,
                        line: 3,
                        col: 18,
                      ),
                    ),
                  ))),
                ],
              ),
            )),
          ))),
        ],
      )),
    )),
  ],
)
